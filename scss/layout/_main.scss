* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  //   font-family: "Poppins", sans-serif;
}

html,
body {
  font-size: 16px;
  /* display: flex;
    justify-content: center;
    align-items: center;
    min-height: 600vh; */
  background: #333;

  height: 100%;
  /* scroll-behavior: smooth; */
  overflow-y: hidden;

  font-family: "Space Grotesk", sans-serif, "M PLUS 1p";
  font-weight: 400;
  font-style: normal;
  font-optical-sizing: auto;
  font-style: normal;
  /* scroll-snap-type: y mandatory; */
}

.l-wrapper {
  text-shadow: 2px 2px 4px black;
  height: 100vh;
  overflow-y: scroll;
  /* scroll-snap-type: y mandatory; */
  /* scroll-behavior: smooth; */
}

.page {
  min-height: 100vh;
  scroll-snap-align: start;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0px;
}

.l-about {
  position: relative;
  width: 100%;
  background: #222;
  color: white;
  z-index: 10;
  padding-left: 40px;

  @include respond-to("md") {
    padding: 20px;
  }
  @include respond-to("sm") {
    padding: 20px;
  }
  @include respond-to("ss") {
    padding: 20px;
  }

  &__container {
    width: 100%;
    display: flex;
    flex-direction: row;
    // justify-content: center;
    align-items: center; // ← 画像とテキストを縦中央に揃える
    gap: 20px;

    @include respond-to("lg") {
    }
    @include respond-to("md") {
      flex-direction: column;
      h1 {
        text-align: center;
      }
    }
    @include respond-to("sm") {
    }
    @include respond-to(“ss”) {
    }
  }

  &__contents {
    width: 50%;
    @include respond-to("lg") {
      width: 60%;
    }
    @include respond-to("md") {
      width: 80%;
    }
    @include respond-to("sm") {
      width: 100%;
    }
    @include respond-to(“ss”) {
    }

    ul {
      display: inline-flex;
      flex-wrap: wrap;
      row-gap: 8px; // ← ここで行間を指定
      gap: 16px;
      margin-left: 20px;
      //   justify-content: center;
      @include respond-to("md") {
        justify-content: center;
        margin-left: 0;
      }

      li {
        font-size: 1.1rem;
        background-color: #000;
        padding: 4px 12px;
        border-radius: 41px;
        outline: 1px solid #fff;
        margin: 0;
        white-space: nowrap;
      }
    }
  }

  &__img {
    display: flex;
    flex: 1; // ← 残りすべてのスペースを使う
    max-width: 560px;
    align-items: center;
    justify-content: center;
    img {
      display: block;
      width: 100%;
      border-radius: 24px;
    }

    @include respond-to("lg") {
      max-width: 500px;
    }
    @include respond-to("md") {
      max-width: 420px;
    }
    @include respond-to("sm") {
      max-width: 240px;
    }
    @include respond-to(“ss”) {
    }
  }

  h1 {
    font-size: 3rem;
    color: #00ff89;
  }

  p {
    font-size: 1.2rem;
    line-height: 2rem;
    margin-left: 20px;
    padding-left: 20px;
    padding-top: 10px;
    padding-bottom: 10px;
    border-left: 3px solid #ddd;
    border-radius: 10px;
    margin-bottom: 24px;
    font-weight: 400;

    @include respond-to("lg") {
    }
    @include respond-to("md") {
      font-size: 1rem;
      line-height: 1.4rem;
      padding-left: 0px;
      padding-top: 0px;
      padding-bottom: 00px;
      border: none;
      margin-left: 0px;
    }
    @include respond-to("sm") {
      font-size: 1rem;
    }
    @include respond-to(“ss”) {
      font-size: 1rem;
    }
  }
}

.l-works {
  position: relative;
  //   max-width: 1200px;
  width: 100%;
  color: white;
  z-index: 10;
  // background-color: rgba(0, 0, 0, 1);
  background: url("../img/bg.webp");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  //   padding-left: 40px;
  padding: 40px;
  @include respond-to("md") {
    padding: 20px;
  }
  @include respond-to("sm") {
    padding: 20px;
  }
  @include respond-to("ss") {
    padding: 20px;
  }

  span {
    color: #00ff89;
    font-weight: 700;
  }

  &__container {
    max-width: 1200px;
  }

  &__card {
    width: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    // flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 24px;
    @include respond-to("xl") {
      gap: 16px;
    }
    @include respond-to("lg") {
      gap: 16px;
      flex-wrap: wrap;
    }
    @include respond-to("md") {
      flex-direction: column;
      gap: 16px;
    }
    @include respond-to("sm") {
    }
    @include respond-to(“ss”) {
    }
  }
  &__img {
    width: 128px;
    flex-shrink: 0;

    @include respond-to("lg") {
      width: 96px;
    }
    @include respond-to("md") {
      width: 96px;
    }
    @include respond-to("sm") {
    }
    @include respond-to(“ss”) {
    }

    &.roundrect {
      border-radius: 16px;
      overflow: hidden; // 画像の角を丸くするために必要
    }

    img {
      width: 100%;
      display: block;
    }
  }
  &__cardtitle {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    a {
      flex-shrink: 0;
    }
    @include respond-to("lg") {
    }
    @include respond-to("md") {
      gap: 16px;
      flex-direction: column;
      margin-bottom: 16px;
    }
    @include respond-to("sm") {
    }
    @include respond-to(“ss”) {
    }
  }
  &__text {
    h2 {
      font-size: 2rem;
      font-weight: 600;
      margin-right: 24px;
      @include respond-to("md") {
        margin-right: 0;
      }
    }
    ul {
      display: inline-flex;
      flex-wrap: wrap;
      row-gap: 8px; // ← ここで行間を指定
      justify-content: center;

      li {
        font-size: 1.1rem;
        background-color: #000;
        padding: 4px 12px;
        border-radius: 41px;
        outline: 1px solid #fff;
        margin-right: 16px;
        white-space: nowrap;
      }
    }
  }

  h1 {
    font-size: 3rem;
    color: #00ff89;
    @include respond-to("md") {
      text-align: center;
    }
  }

  p {
    font-size: 1.2rem;
    line-height: 2rem;
    margin-left: 20px;
    padding-left: 20px;
    padding-top: 10px;
    padding-bottom: 10px;
    margin-bottom: 24px;
    font-weight: 400;

    @include respond-to("lg") {
    }
    @include respond-to("md") {
      font-size: 1rem;
      line-height: 1.4rem;
      padding-left: 0px;
      padding-top: 0px;
      padding-bottom: 00px;
      border: none;
      margin-left: 0px;
    }
    @include respond-to("sm") {
      font-size: 1rem;
    }
    @include respond-to(“ss”) {
      font-size: 1rem;
    }
  }
}

.box {
  padding: 40px;
  position: relative;
  z-index: 10;

  @include respond-to("sm") {
    padding: 20px;
  }
  @include respond-to("ss") {
    padding: 20px;
  }
}

h1 {
  color: #fff;
  font-size: 2.5em;
  font-weight: 600;
  margin-bottom: 20px;

  @include respond-to("lg") {
    font-size: 2rem;
  }
  @include respond-to("md") {
  }
  @include respond-to("sm") {
    font-size: 2.5rem;
  }
  @include respond-to("ss") {
    font-size: 2rem;
  }
}

.box h2 {
  color: #00ff89;
  font-size: 3em;
  font-weight: 600;

  @include respond-to("lg") {
    font-size: 2.5rem;
  }
  @include respond-to("md") {
    font-size: 2.6rem;
  }
  @include respond-to("sm") {
    font-size: 2.6rem;
  }
  @include respond-to("ss") {
    font-size: 2rem;
  }
}

.box .text {
  color: #fff;
  max-width: 750px;
  /* display: inline; */

  @include respond-to("md") {
    font-size: 2.4rem;
  }
  @include respond-to("sm") {
    font-size: 2.2rem;
  }
  @include respond-to("ss") {
    font-size: 1.5rem;
  }
}
.text {
  color: #fff;
  max-width: 750px;
  opacity: 1;
  transition: opacity 0.8s ease;
}
.text-wrapper {
  position: relative;
  margin-left: 1em;
  min-height: 2em; /* または適切な高さ（例: 2em や font-size に合わせて） */
  @include respond-to("sm") {
    margin-left: 0.5em;
  }
  @include respond-to("ss") {
    margin-left: 0.3em;
  }
}
.text.hidden {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  transition: none;
}
#a-word.hidden {
  display: none;
}
.box h2 span.reveal {
  color: #666;
  display: inline-block;
  transform: scale(0);
  opacity: 0;
  width: 0;
  overflow: hidden;
  vertical-align: bottom;
  transition: transform 0.5s ease, opacity 0.5s ease, width 0.5s ease;
  transform-origin: left bottom;
}

.box h2 span.reveal.show {
  transform: scale(1);
  opacity: 1;
  width: auto; /* ← 元の自然な幅に戻す */
}

.box .text span {
  position: relative;
  font-size: 1.25em;
  color: transparent;
  background: #00ff89;
  transition: 0.3s;
  letter-spacing: 0.1em;
}

.box .text span.active {
  color: #fff;
  background: transparent;
  border-bottom: 1px solid #00ff89;
}
.box .text span::before {
  content: "";
  position: absolute;
  inset: 0px;
  /* height: 50%; */
  border-left: 1px solid #00ff89;
  border-bottom: 1px solid #00ff89;

  background: #333;
}
.box .text span:last-child::before {
  border-right: 1px solid #00ff89;

  background: #333;
}

.box .text span.active::before {
  opacity: 0;
}
.arrow-button {
  position: relative;
  width: 36px;
  height: 36px;
  border-radius: 50%;

  border: 2px solid #00ff89;
  background-color: #333;
  cursor: pointer;
  overflow: hidden;
}

/* 中央に固定された矢印（hoverしてないときも表示） */
.arrow-button::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  border-right: 3px solid #00ff89;
  border-bottom: 3px solid #00ff89;
  transform: translate(-70%, -50%) rotate(-45deg) scale(0.8);
  opacity: 1;
  transition: opacity 0.3s ease;
}

/* 流れる矢印（hover時のみ表示） */
.arrow-button::after {
  content: "";
  position: absolute;
  top: 50%;
  left: -20px;
  width: 20px;
  height: 20px;
  border-right: 3px solid #00ff89;
  border-bottom: 3px solid #00ff89;
  transform: translateY(-50%) rotate(-45deg) scale(1.2);
  opacity: 0;
}

/* hover中：中央の矢印を非表示、アニメ矢印表示 */
.arrow-button:hover::before {
  opacity: 0;
}

.arrow-button:hover::after {
  animation: arrowFlow 1.2s linear infinite;
  opacity: 1;
}

/* アニメーションの流れ */
@keyframes arrowFlow {
  0% {
    left: -20px;
    opacity: 0;
    transform: translateY(-50%) rotate(-45deg) scale(1);
  }
  30% {
    opacity: 1;
    transform: translateY(-50%) rotate(-45deg) scale(0.6);
  }
  100% {
    left: 100%;
    opacity: 0;
    transform: translateY(-50%) rotate(-45deg) scale(1.6);
  }
}
